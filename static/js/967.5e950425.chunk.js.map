{"version":3,"file":"static/js/967.5e950425.chunk.js","mappings":"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","sources":["components/prevBtn2.js","components/nextBtn2.js","components/sliderTry.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useContext } from \"react\";\r\nimport { IndexContext } from \"../context/indexContext\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { checkIsLaptop } from \"../function/checkIsLaptop\";\r\n\r\nfunction PrevButton2({ onClick,isHovering }) {\r\n  const i = useContext(IndexContext)\r\n  const hoveringIndex = useSelector(s=>s.bodySlice.hoveringIndex)\r\n    const onClickk = (e)=>{\r\n        e.preventDefault()\r\n        onClick()\r\n    }\r\n  return (\r\n    <button name=\"prev-btn\"\r\n    className={`PREV_BTN absolute  bg-white-u1 hover:bg-white w-8 h-8 rounded-full z100 pl-c2 left-c12 y-center box-shadow-u2\r\n     ${isHovering && i ===hoveringIndex ? \"\" : \"hidden\"}\r\n     ${checkIsLaptop()? '':'hidden'} \r\n     ` }\r\n    onClick={e=>onClickk(e)}\r\n    >\r\n      <i name='prev-btn'\r\n        className=\"fa-solid fa-angle-left fa-sm\"\r\n        style={{ color: \"#222222\", marginRight: \"4px\",marginTop:'5px' }}\r\n      ></i>\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default PrevButton2;\r\n","import { useContext } from \"react\"\r\nimport { useDispatch,useSelector } from \"react-redux\"\r\nimport { IndexContext } from \"../context/indexContext\"\r\nimport { checkIsLaptop } from \"../function/checkIsLaptop\"\r\n\r\nfunction NextButton2({ onClick, isHovering }) {\r\n  const i = useContext(IndexContext)\r\n  const hoveringIndex = useSelector(s=>s.bodySlice.hoveringIndex)\r\n    const onClickk =(e)=>{\r\n        e.preventDefault()\r\n        onClick()\r\n    }\r\n    return (\r\n      <button name=\"next-btn\"\r\n        className={`NEXT_BTN absolute  bg-white-u1 w-8 h-8 \r\n        hover:border-c1 hover:border-solid  hover:border-white  hover:bg-white\r\n        rounded-full  right-c12 y-center box-shadow-u2  z100\r\n       ${isHovering && i===hoveringIndex ? \"\" : \"hidden\"}\r\n       ${checkIsLaptop()?'':'hidden'}`}\r\n        onClick={e=>onClickk(e)}\r\n      >\r\n        <i name='next-btn'\r\n          className=\"fa-solid fa-angle-right fa-sm\"\r\n          style={{ color: \"#222222\", marginLeft: \"0px\" }}\r\n        ></i>\r\n      </button>\r\n    );\r\n  }\r\n  \r\n  export default NextButton2;\r\n  ","import React from \"react\";\r\nimport Slider from \"react-slick\";\r\nimport { useContext } from \"react\";\r\nimport { IndexContext } from \"../context/indexContext\";\r\n// import \"./slider.css\";\r\nimport PrevButton2 from \"./prevBtn2\";\r\nimport NextButton2 from \"./nextBtn2\";\r\nimport { useState } from \"react\";\r\nimport DotsSlide from \"./dots-slide\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setIsHoverItem, setHoveringIndex } from \"../reducer/bodySlice\";\r\n\r\nfunction SliderTry() {\r\n  const itemWidth = useSelector((s) => s.bodySlice.itemWidth);\r\n  const currentHomeList = useSelector((s) => s.bodySlice.currentList);\r\n  const dispatch = useDispatch();\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const isHovering = useSelector((s) => s.bodySlice.isHoverItem);\r\n  const isLaptop = useSelector((s) => s.bodySlice.isLaptop);\r\n  const i = useContext(IndexContext);\r\n  const handleOnMouseMove = () => {\r\n    if (isLaptop) {\r\n      dispatch(setIsHoverItem(true));\r\n      dispatch(setHoveringIndex(i));\r\n    }\r\n  };\r\n  const handleOnMouseLeave = () => {\r\n    if (isLaptop) {\r\n      dispatch(setIsHoverItem(false));\r\n      dispatch(setHoveringIndex(i));\r\n    }\r\n  };\r\n  let index;\r\n  for (let j = 0; j < currentHomeList.length; j++) {\r\n    if (currentHomeList[j].id === i) {\r\n      index = j;\r\n      break;\r\n    }\r\n  }\r\n  const imgArr = currentHomeList[index].imgarr;\r\n  const settings = {\r\n    dots: true,\r\n    infinite: true,\r\n    speed: 500,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1,\r\n    prevArrow: (\r\n      <PrevButton2\r\n        isPrevBtnDisplay={currentIndex === 0 ? false : true}\r\n        isHovering={isHovering}\r\n      />\r\n    ),\r\n    nextArrow: (\r\n      <NextButton2\r\n        isNextBtnDisplay={currentIndex === imgArr.length - 1 ? false : true}\r\n        isHovering={isHovering}\r\n      />\r\n    ),\r\n    beforeChange: (currentI, nextI) => {\r\n      setCurrentIndex(nextI);\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\" relative \"\r\n      style={{ width: itemWidth + \"px\", height: itemWidth + \"px\" }}\r\n      onMouseMove={handleOnMouseMove}\r\n      onMouseLeave={handleOnMouseLeave}\r\n    >\r\n      <Slider {...settings}>\r\n        {imgArr.map((item, index) => {\r\n          return (\r\n            <img\r\n              src={item}\r\n              key={index}\r\n              className=\"XXX m-0 max-w-full w-full h-full max-h-full object-cover   \"\r\n            />\r\n          );\r\n        })}\r\n      </Slider>\r\n      <DotsSlide imgArr={imgArr} currentIndex={currentIndex} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(SliderTry);\r\n"],"names":["_ref","onClick","isHovering","i","useContext","IndexContext","hoveringIndex","useSelector","s","bodySlice","onClickk","e","preventDefault","_jsx","name","className","concat","checkIsLaptop","children","style","color","marginRight","marginTop","marginLeft","SliderTry","index","itemWidth","currentHomeList","currentList","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","currentIndex","setCurrentIndex","isHoverItem","isLaptop","j","length","id","imgArr","imgarr","settings","dots","infinite","speed","slidesToShow","slidesToScroll","prevArrow","PrevButton2","isPrevBtnDisplay","nextArrow","NextButton2","isNextBtnDisplay","beforeChange","currentI","nextI","_jsxs","width","height","onMouseMove","setIsHoverItem","setHoveringIndex","onMouseLeave","Slider","_objectSpread","map","item","src","DotsSlide","React"],"sourceRoot":""}